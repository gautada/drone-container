#!/bin/ash
#
# entrypoint: Located at `/etc/container/entrypoint` this script is the custom
#             entry for a container as called by `/usr/bin/container-entrypoint` set
#             in the upstream [alpine-container](https://github.com/gautada/alpine-container).
#             The default template is kept in
#             [gist](https://gist.github.com/gautada/f185700af585a50b3884ad10c2b02f98)

ENTRYPOINT_PARAMS="$@"
. /etc/profile

app_version() {
 . /mnt/volumes/configmap/server.env
 echo $DRONE_SERVER_VERSION
}

podman_version() {
 /usr/bin/podman --version |  awk -F ' ' '{print $3}'
}

runner_exec_version() {
  . /mnt/volumes/configmap/runner-exec.env
 echo $DRONE_RUNNER_EXEC_VERSION
}

log "-i" "entrypoint" "Start drone"
/usr/bin/pgrep /usr/bin/podman > /dev/null
TEST=$?
if [ $TEST -eq 1 ] ; then
 log "-i" "entrypoint" "Forked podman($(podman_version))"
 /usr/bin/podman --log-level fatal system service --time 0 &
fi

/usr/bin/pgrep drone-runner-exec > /dev/null
TEST=$?
if [ $TEST -eq 1 ] ; then
 log "-i" "entrypoint" "Forked runner-exec($(runner-exec-version))"
 /usr/bin/drone-runner-exec daemon "/etc/container/runner-exec.env" &
fi

if [ -z "$@" ] ; then
 /usr/bin/pgrep drone-server > /dev/null
 TEST=$?
 if [ $TEST -eq 1 ] ; then
  log "-i" "entrypoint" "Blocking server($(app_version))"
  /usr/bin/drone-server --env-file /etc/container/server.env
 fi
 return 1
else
 /usr/bin/pgrep drone-server > /dev/null
 TEST=$?
 if [ $TEST -eq 1 ] ; then
  log "-i" "entrypoint" "Forked server($(app_version))"
  /usr/bin/drone-server --env-file /etc/container/server.env >> /mnt/volumes/container/_log 2>&1 &
 fi
 return 0
fi
