@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

System_Ext(github, "Github", "Source Code Manager", "Git Service")
System_Ext(docker, "Docker", "Container Repository", "Container Repository")

System(podman, "Podman", "Container System", "OCI Container API")
System(drone, "Drone", "Continuous Build", "Continuous Build System")
System(gitea, "Gitea", "Source Code Manager", "Local/Private Source Code and Configuration Information")
System(microk8s, "Microk8s", "Kubernetes Container Platform", "Local kubernetes platform")

Lay_D(github, gitea)

Rel_R(github, drone, "Triggers")
Rel_R(gitea, drone, "Triggers")
Rel_R(drone, microk8s, "Deploys")
Rel_D(drone, podman, "Uses")
Rel_R(podman, docker, "Releases")

@enduml



@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title "Container Diagram - Drone"
Container_Boundary(drone, "Drone Continuous Build") {
 Component(scheduler, "CROND", "Scheduler", "The crond system scheduler")
 Component(server, "Server", "Application Server", "The UI and the app server for CICD")
 Component(runner, "Runner", "Worker Node", "The runner is a worker node of the CICD system")
 Component(cli, "CLI", "Administration", "Low level dirce administration (CLI) interface")
 Component(podman, "Podman", "Container System", "OCI Container API")
 
 Rel_R(scheduler, server, "Administers?")
 Rel_R(cli, server, "Administers")
 Rel_R(server, worker, "Executs")
}
Container(logging, "Logging Service", "...", "...")
Container(ha, "High Availability", "...", "...")
@enduml



@startuml
' Fix the number this is evolving to the Architecture pattern
' Note the security issue of the storage class accessing the storage (if over a network then make encrypted)

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Boundary(CLUSTER, "Cluster") {
 Boundary(NAMESPACE, "Namespace") {
  Boundary(DEPLOYMENT, "Deployment") {
   Boundary(POD, "Pod") {
    Boundary(CONTAINER, "Container") {
     Component(MOUNT, "Data Mount")
    }
   }
   Component(VOLUME1, "Data Volume")
  }
  Component(CLAIM1, "Data Volume Claim")
 }
 Component(PV, "Data Persistent Volume")
 Component(STORAGECLASS, "StorageClass")
}

ComponentDb_Ext(STORAGE, "Physical Storage")

' Boundary(NAS, "Network Attached Storage") {
' Boundary(NFS, "Network File Share") {
'  Component_Ext(SHARE1, "NFS Share")
' ComponentDb_Ext(DIRECTORY1, "NFS Directory")
' }
'}

Rel(MOUNT1, VOLUME1, "Mounts to contaier file system")
Rel(VOLUME1, CLAIM1, "Uses to access")
Rel(CLAIM1, PV, "Claims/Bounds")
Rel(PV, STORAGECLASS, "Uses")
Rel(STORAGECLASS, STORAGE, "Accesses")

' Rel(STORAGECLASS, SHARE1, "Accesses")
' Rel(SHARE1, DIRECTORY1, "Publishes")
@enduml
